{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Capor\\\\WebstormProjects\\\\glowing-flowers\\\\src\\\\pages\\\\login\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport { cx, css } from '@emotion/css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport H1 from '../../components/heading/H1';\nimport TextButton from '../../components/button/TextButton';\nimport LoginButton from '../../components/button/LoginButton';\nimport FormInput from '../../components/input/FormInput';\nimport { useAuthContext } from '../../context/AuthContext';\nimport { signup } from '../../services/auth';\nimport loginWrapperCSS from '../../components/login/LoginWrapper';\nimport formLoginCSS from '../../components/login/FormLogin';\nimport formLoginWrapperCSS from '../../components/login/FormLoginWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginLinkCSS = css`\n  margin: 24px;\n  text-align: center;\n  > a {\n    cursor: pointer;\n    font-weight: 700;\n    margin-left: 5px;\n  }\n`;\nconst defaultFormFields = {\n  username: '',\n  password: '',\n  confirmPassword: '',\n  email: ''\n};\n\nfunction RegisterPage() {\n  _s();\n\n  const timerRef = useRef(null);\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    username,\n    password,\n    confirmPassword,\n    email\n  } = formFields;\n  const {\n    createSession\n  } = useAuthContext();\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    timerRef.current = setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  useEffect(() => {\n    return () => clearTimeout(timerRef.current);\n  }, []);\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n\n    try {\n      const user = await signup(resetFormFields());\n      if (!formFields) return;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      }\n\n      createSession(user);\n      alert('Your registration was successfully submitted!');\n      setErrorMessage('required field');\n    } catch (error) {\n      console.log('error', error);\n      sendMessage();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: loginWrapperCSS,\n    children: [/*#__PURE__*/_jsxDEV(H1, {\n      title: \"Create account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: formLoginWrapperCSS,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: formLoginCSS,\n        onSubmit: handleSignUp,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Name\",\n          placeholder: \"name\",\n          type: \"text\",\n          required: true,\n          onChange: handleChange,\n          name: \"username\",\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Email\",\n          placeholder: \"yourname@email.com\",\n          type: \"email\",\n          required: true,\n          onChange: handleChange,\n          name: \"email\",\n          autoComplete: \"email\",\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Password\",\n          placeholder: \"password\",\n          type: \"password\",\n          required: true,\n          autoComplete: \"current-password\",\n          name: \"password\",\n          onChange: handleChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Confirm password\",\n          placeholder: \"password\",\n          type: \"password\",\n          required: true,\n          autoComplete: \"current-password\",\n          name: \"confirmPassword\",\n          onChange: handleChange,\n          value: confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n          type: \"submit\",\n          value: \"Create account\",\n          margin: \"0 auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextButton, {\n        className: cx(loginLinkCSS),\n        title: \"Do you already have an account? \",\n        link: \"Sign in\",\n        url: \"account/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterPage, \"AdjzB3STqe6b3V9NnI+AJ4W3bI0=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["cx","css","React","useState","useEffect","useRef","H1","TextButton","LoginButton","FormInput","useAuthContext","signup","loginWrapperCSS","formLoginCSS","formLoginWrapperCSS","loginLinkCSS","defaultFormFields","username","password","confirmPassword","email","RegisterPage","timerRef","formFields","setFormFields","createSession","errorMessage","setErrorMessage","sendMessage","e","preventDefault","current","setTimeout","clearTimeout","resetFormFields","handleChange","event","name","value","target","handleSignUp","user","alert","error","console","log"],"sources":["C:/Users/Capor/WebstormProjects/glowing-flowers/src/pages/login/RegisterPage.js"],"sourcesContent":["import { cx, css } from '@emotion/css';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport H1 from '../../components/heading/H1';\r\nimport TextButton from '../../components/button/TextButton';\r\nimport LoginButton from '../../components/button/LoginButton';\r\nimport FormInput from '../../components/input/FormInput';\r\nimport { useAuthContext } from '../../context/AuthContext';\r\nimport { signup } from '../../services/auth';\r\nimport loginWrapperCSS from '../../components/login/LoginWrapper';\r\nimport formLoginCSS from '../../components/login/FormLogin';\r\nimport formLoginWrapperCSS from '../../components/login/FormLoginWrapper';\r\n\r\nconst loginLinkCSS = css`\r\n  margin: 24px;\r\n  text-align: center;\r\n  > a {\r\n    cursor: pointer;\r\n    font-weight: 700;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nconst defaultFormFields = {\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  email: '',\r\n};\r\n\r\nfunction RegisterPage() {\r\n  const timerRef = useRef(null);\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { username, password, confirmPassword, email } = formFields;\r\n  const { createSession } = useAuthContext();\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    timerRef.current = setTimeout(() => {\r\n      setErrorMessage(null);\r\n    }, 5000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => clearTimeout(timerRef.current);\r\n  }, []);\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const user = await signup(resetFormFields());\r\n      if (!formFields) return;\r\n      if (password !== confirmPassword) {\r\n        alert(\"passwords don't match\");\r\n        return;\r\n      }\r\n      createSession(user);\r\n      alert('Your registration was successfully submitted!');\r\n      setErrorMessage('required field');\r\n    } catch (error) {\r\n      console.log('error', error);\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={loginWrapperCSS}>\r\n      <H1 title=\"Create account\" />\r\n      <div className={formLoginWrapperCSS}>\r\n        <p>{errorMessage}</p>\r\n        <form className={formLoginCSS} onSubmit={handleSignUp}>\r\n          <FormInput\r\n            label=\"Name\"\r\n            placeholder=\"name\"\r\n            type=\"text\"\r\n            required\r\n            onChange={handleChange}\r\n            name=\"username\"\r\n            value={username}\r\n          />\r\n          <FormInput\r\n            label=\"Email\"\r\n            placeholder=\"yourname@email.com\"\r\n            type=\"email\"\r\n            required\r\n            onChange={handleChange}\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            value={email}\r\n          />\r\n          <FormInput\r\n            label=\"Password\"\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            required\r\n            autoComplete=\"current-password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={password}\r\n          />\r\n          <FormInput\r\n            label=\"Confirm password\"\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            required\r\n            autoComplete=\"current-password\"\r\n            name=\"confirmPassword\"\r\n            onChange={handleChange}\r\n            value={confirmPassword}\r\n          />\r\n\r\n          <LoginButton type=\"submit\" value=\"Create account\" margin=\"0 auto\" />\r\n        </form>\r\n\r\n        <TextButton\r\n          className={cx(loginLinkCSS)}\r\n          title=\"Do you already have an account? \"\r\n          link=\"Sign in\"\r\n          url=\"account/login\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}