{"ast":null,"code":"import { CART_ACTION_TYPES } from './cart.types';\nimport { createAction } from '../../utils/reducer.utils';\nexport const addItem = (items, productToAdd) => {\n  const existingItem = items.find(item => item.id === productToAdd.id);\n\n  if (existingItem) {\n    return items.map(item => item.id === productToAdd.id ? { ...item,\n      quantity: item.quantity + 1\n    } : item);\n  }\n\n  return [...items, { ...productToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItem = (items, itemToRemove) => {\n  // find the cart item to remove\n  const existingItem = items.find(item => item.id === itemToRemove.id); // check if quantity is equal to 1, if it is remove that item from the cart\n\n  if (existingItem.quantity === 1) {\n    return items.filter(item => item.id !== itemToRemove.id);\n  } // return back items with matching cart item with reduced quantity\n\n\n  return items.map(item => item.id === itemToRemove.id ? { ...item,\n    quantity: item.quantity - 1\n  } : item);\n};\nexport const clearItem = (items, itemToClear) => items.filter(item => item.id !== itemToClear.id);\nexport const setIsCartOpen = boolean => createAction(CART_ACTION_TYPES.SET_IS_CART_OPEN, boolean);\nexport const addItemToCart = (items, productToAdd) => {\n  const newItems = addItem(items, productToAdd);\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newItems);\n};\nexport const removeItemFromCart = (items, itemToRemove) => {\n  const newItems = removeItem(items, itemToRemove);\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newItems);\n};\nexport const clearItemFromCart = (items, itemToClear) => {\n  const newItems = clearItem(items, itemToClear);\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newItems);\n};","map":{"version":3,"names":["CART_ACTION_TYPES","createAction","addItem","items","productToAdd","existingItem","find","item","id","map","quantity","removeItem","itemToRemove","filter","clearItem","itemToClear","setIsCartOpen","boolean","SET_IS_CART_OPEN","addItemToCart","newItems","SET_CART_ITEMS","removeItemFromCart","clearItemFromCart"],"sources":["C:/Users/Capor/WebstormProjects/glowing-flowers/src/redux/cart/cart.action.js"],"sourcesContent":["import { CART_ACTION_TYPES } from './cart.types';\r\nimport { createAction } from '../../utils/reducer.utils';\r\n\r\nexport const addItem = (items, productToAdd) => {\r\n  const existingItem = items.find(\r\n    (item) => item.id === productToAdd.id\r\n  );\r\n\r\n  if (existingItem) {\r\n    return items.map((item) =>\r\n      item.id === productToAdd.id\r\n        ? { ...item, quantity: item.quantity + 1 }\r\n        : item\r\n    );\r\n  }\r\n\r\n  return [...items, { ...productToAdd, quantity: 1 }];\r\n};\r\n\r\nexport const removeItem = (items, itemToRemove) => {\r\n  // find the cart item to remove\r\n  const existingItem = items.find(\r\n    (item) => item.id === itemToRemove.id\r\n  );\r\n\r\n  // check if quantity is equal to 1, if it is remove that item from the cart\r\n  if (existingItem.quantity === 1) {\r\n    return items.filter((item) => item.id !== itemToRemove.id);\r\n  }\r\n\r\n  // return back items with matching cart item with reduced quantity\r\n  return items.map((item) =>\r\n    item.id === itemToRemove.id\r\n      ? { ...item, quantity: item.quantity - 1 }\r\n      : item\r\n  );\r\n};\r\n\r\nexport const clearItem = (items, itemToClear) =>\r\n  items.filter((item) => item.id !== itemToClear.id);\r\n\r\nexport const setIsCartOpen = (boolean) =>\r\n  createAction(CART_ACTION_TYPES.SET_IS_CART_OPEN, boolean);\r\n\r\nexport const addItemToCart = (items, productToAdd) => {\r\n  const newItems = addItem(items, productToAdd);\r\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newItems);\r\n};\r\n\r\nexport const removeItemFromCart = (items, itemToRemove) => {\r\n  const newItems = removeItem(items, itemToRemove);\r\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newItems);\r\n};\r\n\r\nexport const clearItemFromCart = (items, itemToClear) => {\r\n  const newItems = clearItem(items, itemToClear);\r\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newItems);\r\n};\r\n"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;EAC9C,MAAMC,YAAY,GAAGF,KAAK,CAACG,IAAN,CAClBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,YAAY,CAACI,EADhB,CAArB;;EAIA,IAAIH,YAAJ,EAAkB;IAChB,OAAOF,KAAK,CAACM,GAAN,CAAWF,IAAD,IACfA,IAAI,CAACC,EAAL,KAAYJ,YAAY,CAACI,EAAzB,GACI,EAAE,GAAGD,IAAL;MAAWG,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;IAArC,CADJ,GAEIH,IAHC,CAAP;EAKD;;EAED,OAAO,CAAC,GAAGJ,KAAJ,EAAW,EAAE,GAAGC,YAAL;IAAmBM,QAAQ,EAAE;EAA7B,CAAX,CAAP;AACD,CAdM;AAgBP,OAAO,MAAMC,UAAU,GAAG,CAACR,KAAD,EAAQS,YAAR,KAAyB;EACjD;EACA,MAAMP,YAAY,GAAGF,KAAK,CAACG,IAAN,CAClBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYI,YAAY,CAACJ,EADhB,CAArB,CAFiD,CAMjD;;EACA,IAAIH,YAAY,CAACK,QAAb,KAA0B,CAA9B,EAAiC;IAC/B,OAAOP,KAAK,CAACU,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYI,YAAY,CAACJ,EAAhD,CAAP;EACD,CATgD,CAWjD;;;EACA,OAAOL,KAAK,CAACM,GAAN,CAAWF,IAAD,IACfA,IAAI,CAACC,EAAL,KAAYI,YAAY,CAACJ,EAAzB,GACI,EAAE,GAAGD,IAAL;IAAWG,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;EAArC,CADJ,GAEIH,IAHC,CAAP;AAKD,CAjBM;AAmBP,OAAO,MAAMO,SAAS,GAAG,CAACX,KAAD,EAAQY,WAAR,KACvBZ,KAAK,CAACU,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYO,WAAW,CAACP,EAA/C,CADK;AAGP,OAAO,MAAMQ,aAAa,GAAIC,OAAD,IAC3BhB,YAAY,CAACD,iBAAiB,CAACkB,gBAAnB,EAAqCD,OAArC,CADP;AAGP,OAAO,MAAME,aAAa,GAAG,CAAChB,KAAD,EAAQC,YAAR,KAAyB;EACpD,MAAMgB,QAAQ,GAAGlB,OAAO,CAACC,KAAD,EAAQC,YAAR,CAAxB;EACA,OAAOH,YAAY,CAACD,iBAAiB,CAACqB,cAAnB,EAAmCD,QAAnC,CAAnB;AACD,CAHM;AAKP,OAAO,MAAME,kBAAkB,GAAG,CAACnB,KAAD,EAAQS,YAAR,KAAyB;EACzD,MAAMQ,QAAQ,GAAGT,UAAU,CAACR,KAAD,EAAQS,YAAR,CAA3B;EACA,OAAOX,YAAY,CAACD,iBAAiB,CAACqB,cAAnB,EAAmCD,QAAnC,CAAnB;AACD,CAHM;AAKP,OAAO,MAAMG,iBAAiB,GAAG,CAACpB,KAAD,EAAQY,WAAR,KAAwB;EACvD,MAAMK,QAAQ,GAAGN,SAAS,CAACX,KAAD,EAAQY,WAAR,CAA1B;EACA,OAAOd,YAAY,CAACD,iBAAiB,CAACqB,cAAnB,EAAmCD,QAAnC,CAAnB;AACD,CAHM"},"metadata":{},"sourceType":"module"}